#!/usr/bin/python
from flask import Flask, render_template, request, make_response, redirect, url_for
from util import valid_login, set_login_cookie, delete_cookie, valid_username, valid_password, valid_email, CACHE, make_pw_hash

app = Flask(__name__)

PARAMS = dict(username = "", password = "", email = "") # very unsafe ! should be replaced 

@app.route('/cover')
@app.route('/')
def cover():
    return render_template('cover.html',**PARAMS)

@app.route('/chapter1')
def chapter1(**kwa):
    return render_template('chapter1.html',**PARAMS)

@app.route('/login', methods=['GET','POST'])
def login(**kwa):
    error = ""

    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        if valid_login(username, password):
            global PARAMS # very unsafe ! should be replaced 
            PARAMS = dict(username=username,password =password) # very unsafe ! should be replaced
            res = make_response("login success<br>Back to <a href='/'>main</a>")
            set_login_cookie(username,res)
            return res
        else:
            error = "invalid username/password"
    return render_template('login.html', error=error,**PARAMS)

@app.route('/logout')
def logout():
    response = make_response(redirect('/'))
    delete_cookie(response)
    global PARAMS # very unsafe ! should be replaced 
    PARAMS = dict(username = "", password = "", email = "") # very unsafe ! should be replaced 
    # should flash!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    return response

@app.route('/signup', methods=['GET','POST'])
def signup(**kwa):
    if request.method == 'POST':
        have_error = False
        username = request.form['username']
        password = request.form['password']
        verify = request.form['verify']
        email = request.form['email']
        
        PARAMS['password'] = password
        PARAMS['email'] = email

        if not valid_username(username):
            PARAMS['error_username'] = "That's not a valid username."
            have_error = True

        if not valid_password(password):
            PARAMS['error_password'] = "That wasn't a valid password."
            have_error = True
        elif password != verify:
            PARAMS['error_verify'] = "Your passwords didn't match."
            have_error = True

        if not valid_email(email):
            PARAMS['error_email'] = "That's not a valid email."
            have_error = True

        if have_error:
            return render_template('signup.html', **PARAMS)
        else: # the success case
            u = CACHE.get(username)
            if u:
                msg = "the username already exists"
                return render_template('signup.html', error_username = msg)
            
            PARAMS['username'] = username
            res = make_response(redirect('/'))
            set_login_cookie(username,res)
            
            # register the username
            pw_hash = make_pw_hash(username, password) 
            CACHE[username] = [username,pw_hash] 
            return res

    return render_template('signup.html')

@app.route('/about')
def about(**kwa):
    return render_template('about.html', **PARAMS)

@app.route('/context')
def context(**kwa):
    return render_template('context.html', **PARAMS)

@app.route('/plot')
def plot(**kwa):
    return render_template('plot.html', **PARAMS)

@app.route('/characters')
def character(**kwa):
    return render_template('characters.html', **PARAMS)

@app.route('/games')
def games(**kwa):
    return render_template('games.html', **PARAMS)


if __name__ == '__main__':
    app.run(debug=True)
